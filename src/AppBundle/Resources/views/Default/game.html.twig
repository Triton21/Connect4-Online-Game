{% extends "AppBundle:Default:defaultbase.html.twig" %}

{% block stylesheets %}

    <style type="text/css">
        .mainrow {
            padding-left: 0px;
            padding-right: 0px;
        }
        .place {
            padding: 20px 0px 0px 0px;
        }
        .victory-blue {
            font-size: 52px;
            text-align: center;
        }
        .victory-red {
            font-size: 52px;
            text-align: center;
        }
        .row6 {
            background-color: #f2d4d4;
            min-height:72px;
        }
        .row5 {
            background-color: white;
            min-height:72px;
        }
        .row4 {
            background-color: #f2d4d4;
            min-height:72px;
        }
        .row3 {
            background-color: white;
            min-height:72px;
        }
        .row2 {
            background-color: #f2d4d4;
            min-height:72px;
        }
        .row1 {
            background-color: white;
            min-height:72px;
        }
        .centered {
            margin-left: auto;
            margin-right: auto;
            text-align: center;
        }
        .chevronDiv {
            min-height: 35px;
        }
        a.disabled {
            opacity: 0.5;
            pointer-events: none;
            cursor: default;
        }
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 70%;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        .mypanel {
            background-image: url("{{asset('bundles/app/images/c64loading.gif')}}");
            min-height: 250px;
        }
        .centered {
            margin-left: auto;
            margin-right: auto;
        }
        .arcadeText {
            font-family:'Arcade Rounded';
            text-align: center;
        }
        #canvas-container {
            width: 100%;
            text-align:center;
        }
        canvas {
            display: inline;
            background: url("{{asset('bundles/app/images/con4sym3.png')}}");
            background-size: 100% 100%;
        }
    </style>

{% endblock %}        

{% block body %}

    {#MODAL BOX#}
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">x</span>
            <p id="modalContent" style="font-family:'Arcade Rounded';font-weight:normal;font-size:15px"></p>
            <div class="centered">
                <p><a href id="playUser" style="font-family:'Arcade Rounded'" class="btn btn-success btn-sm playUser" role="button">Play</a></p>
                <p><a href id="notNow" style="font-family:'Arcade Rounded'" class="btn btn-danger btn-sm cancelButton" role="button">Not now!</a></p>
            </div>
        </div>
    </div>

    <div class="col-xs-12 col-sm-offset-1 col-sm-10 col-md-offset-2 col-md-8 col-lg-offset-3 col-lg-6">
        <div class="centered" style="margin-top:-20px;">
            <span style="font-family:'Arcade Rounded';font-weight:normal;font-size:15px">Opponent: {{opponent.name}} </span>
        </div>
        <div class="centered">
            <span style="font-family:'Arcade Rounded';font-weight:normal;font-size:10px">Status: </span>
            <span id="statusMessage" style="font-family:'Arcade Rounded';font-weight:normal;font-size:10px"> </span>
        </div>
        <div class="col-xs-1" style="display: none;" id="startcolor" data-value="{{startColor}}"></div>
        <div class="col-xs-12" style="min-height:20px; font-family:'Arcade Interlaced';font-weight:normal;font-size:32px;text-align: center;" class="victory" id="victory"></div>
        <div id="victory-blue" class="col-xs-12" style="font-family:'Arcade Rounded';font-weight:normal;font-size:30px; text-align: center;"></div>
        <div id="victory-red" class="col-xs-12" style="font-family:'Arcade Rounded';font-weight:normal;font-size:30px; text-align: center;"></div>
        <div id="redName" {% if myColor == 'red' %} action-name="{{user.userName}}"{% else %}action-name="{{opponent.name}}" {% endif %} ></div>
        <div id="blueName" {% if myColor == 'blue' %} action-name="{{user.userName}}"{% else %}action-name="{{opponent.name}}" {% endif %} ></div>
        <div id="playAgain" class="col-xs-12 textCentered" style="display:none;">
            <p><a href="#" id="newGame" class="btn btn-success btn-sm playUser" style="font-family:'Arcade Rounded'" role="button">Play again</a></p>
            <p><a href="{{path('app_main')}}" class="btn btn-danger btn-sm cancelButton" style="font-family:'Arcade Rounded'" role="button">Not now!</a></p>
        </div>
    </div>

    <div class="col-xs-12 col-sm-offset-1 col-sm-10 col-md-offset-2 col-md-8 col-lg-offset-3 col-lg-6 mycol" style="margin-top:-10px;" id="myMainPanel">
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="a-col"><span data-action="col1" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>

            <div class="panel panel-info" id="colMain1" style="display: none;">
                <div class="place row6" id="col16">
                </div>
                <div class="place row5" id="col15">
                </div>
                <div class="place row4" id="col14">
                </div>
                <div class="place row3" id="col13">
                </div>
                <div class="place row2" id="col12">
                </div>
                <div class="place row1" id="col11">
                </div>
            </div>
        </div>
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="b-col"><span data-action="col2" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>

            <div class="panel panel-info" id="colMain2" style="display: none;">
                <div class="place row6" id="col26">
                </div>
                <div class="place row5" id="col25">
                </div>
                <div class="place row4" id="col24">
                </div>
                <div class="place row3" id="col23">
                </div>
                <div class="place row2" id="col22">
                </div>
                <div class="place row1" id="col21">
                </div>
            </div>
        </div>
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="c-col"><span data-action="col3" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>

            <div class="panel panel-info" id="colMain3" style="display: none;">
                <div class="place row6" id="col36" >
                </div>
                <div class="place row5" id="col35" >
                </div>
                <div class="place row4" id="col34" >
                </div>
                <div class="place row3" id="col33" >
                </div>
                <div class="place row2" id="col32" >
                </div>
                <div class="place row1" id="col31" >
                </div>
            </div>
        </div>
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="d-col"><span data-action="col4" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>
            <div class="panel panel-info" id="colMain4" style="display: none;">
                <div class="place row6" id="col46" >
                </div>
                <div class="place row5" id="col45" >
                </div>
                <div class="place row4" id="col44" >
                </div>
                <div class="place row3" id="col43" >
                </div>
                <div class="place row2" id="col42" >
                </div>
                <div class="place row1" id="col41" >
                </div>
            </div>
        </div>
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="e-col"><span data-action="col5" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>
            <div class="panel panel-info" id="colMain5" style="display: none;">
                <div class="place row6" id="col56" >
                </div>
                <div class="place row5" id="col55" >
                </div>
                <div class="place row4" id="col54" >
                </div>
                <div class="place row3" id="col53" >
                </div>
                <div class="place row2" id="col52" >
                </div>
                <div class="place row1" id="col51" >
                </div>
            </div>
        </div>
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="f-col"><span data-action="col6" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>
            <div class="panel panel-info" id="colMain6" style="display: none;">
                <div class="place row6" id="col66" >
                </div>
                <div class="place row5" id="col65" >
                </div>
                <div class="place row4" id="col64" >
                </div>
                <div class="place row3" id="col63" >
                </div>
                <div class="place row2" id="col62" >
                </div>
                <div class="place row1" id="col61" >
                </div>
            </div>
        </div>
        <div class="col-xs-15 centered">
            <div class="chevronDiv"><a href="#" class="moveHref" id="g-col"><span data-action="col7" class="gi-10p glyphicon glyphicon-chevron-down myChevron" style="color:#337ab7;"></span></a></div>
            <div class="panel panel-info" id="colMain7" style="display: none;">
                <div class="place row6" id="col76" >
                </div>
                <div class="place row5" id="col75" >
                </div>
                <div class="place row4" id="col74" >
                </div>
                <div class="place row3" id="col73" >
                </div>
                <div class="place row2" id="col72" >
                </div>
                <div class="place row1" id="col71" >
                </div>
            </div>
        </div>





    </div>


    <div class="col-xs-12 col-sm-offset-1 col-sm-10 col-md-offset-2 col-md-8 col-lg-offset-3 col-lg-6" style="background-color: lightblue;" id="referenceCol">
    </div>
    <div id="canvas-container">
        <canvas id="canvas" width="400" height="380" style="border:0px;">
            This text is displayed if your browser does not support HTML5 Canvas.
        </canvas>
    </div>





{% endblock %}   

{% block javascript %}
    <script src="{{asset('bundles/app/js/column.js')}}"></script>
    <script src="{{asset('bundles/app/js/mygame.js')}}"></script>


    <script>
        (function () {
            var lastTime = 0;
            var vendors = ['ms', 'moz', 'webkit', 'o'];
            for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
                window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
                window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']
                        || window[vendors[x] + 'CancelRequestAnimationFrame'];
            }

            if (!window.requestAnimationFrame)
                window.requestAnimationFrame = function (callback, element) {
                    var currTime = new Date().getTime();
                    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                    var id = window.setTimeout(function () {
                        callback(currTime + timeToCall);
                    },
                            timeToCall);
                    lastTime = currTime + timeToCall;
                    return id;
                };

            if (!window.cancelAnimationFrame)
                window.cancelAnimationFrame = function (id) {
                    clearTimeout(id);
                };
        }());

        $(document).ready(function () {

            //resize canvas when load the page
            var colWidth = $("#referenceCol").width();
            function resizeCanvas() {
                var canvas = $("#canvas");
                canvas.attr('width', colWidth);
                globalColWidht = canvas.width();
            }
            resizeCanvas();

            //resize canvas when change the window
            var waitForFinalEvent = (function () {
                var timers = {};
                return function (callback, ms, uniqueId) {
                    if (!uniqueId) {
                        uniqueId = "Don't call this twice without a uniqueId";
                    }
                    if (timers[uniqueId]) {
                        clearTimeout(timers[uniqueId]);
                    }
                    timers[uniqueId] = setTimeout(callback, ms);
                };
            })();

            $(window).resize(function () {
                waitForFinalEvent(function () {
                    var oldWidth = $("#canvas").css("width").replace("px", "");
                    var oldHeight = $("#canvas").css("height").replace("px", "");
                    var canvas = $("#canvas");
                    $("#canvas").css({
                        "width": $("#referenceCol").width(),
                        "height": $("#canvas").height()
                    });
                    var ratio1 = oldWidth / window.innerWidth;
                    var ratio2 = oldHeight / window.innerHeight;
                    canvas.ctx.scale(ratio1, ratio2);
                    globalColWidht = canvas.width();
                }, 500, "some unique string");
            });

            //report to the server the player is online every 15 sec
            $(function () {
                setInterval(function () {
                    var userId = '{{user.userId}}';
                    var myUrl = "{{path('app_ajaxonline')}}";
                    var data = {'userId': userId};
                    $.ajax({
                        type: 'POST',
                        url: myUrl,
                        cache: false,
                        data: data,
                        dataType: "json",
                        success: function (response) {
                            //console.log(response);
                        },
                        complete: function () {
                            //console.log('Request is complete');
                        },
                        error: function () {
                            console.log('Oops...there was an error!');
                        }
                    });

                }, 15000);
            });

            //check opponent move
            $(function () {
                setInterval(function () {
                    var oppId = '{{opponent.id}}';
                    var myUrl = "{{path('app_ajaxcheckmove')}}";
                    var gameId = '{{game.id}}';
                    var data = {'oppId': oppId, 'gameId': gameId};
                    $.ajax({
                        type: 'POST',
                        url: myUrl,
                        cache: false,
                        data: data,
                        dataType: "json",
                        success: function (response) {
                            if (response.oppMove == 'no opponent') {
                                $('#statusMessage').html('{{opponent.name}}' + ' has left the game!');
                            } else {
                                //console.log(response.oppMove);
                                if (response.oppMove != 'no move') {
                                    connectModule.oppmove(response.oppMove);
                                    enableChevron();
                                    changePlayerStatus();
                                }
                            }
                        },
                        complete: function () {
                            //console.log('Request is complete');
                        },
                        error: function () {
                            console.log('Oops...there was an error!');
                        }
                    });

                }, 1000);
            });

            //disable chevrons if startmove == false
            $(function () {
                var startmove = '{{startMove}}'
                if (startmove != true) {
                    disableChevron();
                }
                if (startmove != true) {
                    $('#statusMessage').html('Waiting for ' + '{{opponent.name}}');
                    $('#statusMessage').attr('move-name', '{{opponent.name}}');
                } else {
                    $('#statusMessage').html('my move');
                    $('#statusMessage').attr('move-name', '{{myPlayer.name}}');
                }
            });

            //disable chevrons if move == false
            function disableChevron() {
                $('.moveHref').addClass('disabled');
            }

            //enable chevron
            function enableChevron() {
                $('.moveHref').removeClass('disabled');
            }

            function changePlayerStatus() {
                var movePlayer = $('#statusMessage').attr('move-name');
                if (movePlayer === '{{opponent.name}}') {
                    $('#statusMessage').attr('move-name', '{{myPlayer.name}}');
                    $('#statusMessage').html('my move');
                } else {
                    $('#statusMessage').html('Waiting for ' + '{{opponent.name}}');
                    $('#statusMessage').attr('move-name', '{{opponent.name}}');
                }
            }



            //send move to server
            $(document).on('click', ".myChevron", function (e) {
                disableChevron();
                changePlayerStatus();
                var myId = '{{myId}}';
                var gameId = '{{game.id}}';
                var move = $(this).attr('data-action');
                var myUrl = "{{path('app_ajaxmove')}}";
                if (move) {
                    var jsonData = {'myId': myId, 'move': move, 'gameId': gameId};
                    $.ajax({
                        type: 'POST',
                        url: myUrl,
                        cache: false,
                        data: jsonData,
                        dataType: "json",
                        success: function (response) {
                            //console.log(response.myId);
                            //console.log(response.move);
                            //console.log(response.gameId);
                        },
                        complete: function () {
                            //console.log('Request is complete');
                        },
                        error: function () {
                            console.log('Oops...there was an error!');
                        }
                    });
                }
                e.preventDefault();
            });

            //click to play with a user
            $(document).on('click', "#newGame", function (e) {
                e.preventDefault();
                var oppId = '{{opponent.id}}';
                var oppName = '{{opponent.name}}';
                console.log(oppId);
                $('#myMainPanel').addClass('mypanel');
                var appNode = '<div class="col-md-12" style="min-height: 50px"></div><div class="arcadeText col-md-12" style="font-size:30px;color:white;">Requesting ' + oppName + '</div>\n\
                                <div class="col-md-12" style="min-height: 25px"></div><div class="col-sm-offset-5 col-sm-2 textCentered" style="min-height: 25px;"><a href="PLACEHOLDER" class="btn btn-danger btn-sm textCentered arcadeText" role="button">CANCEL</a></div>';
                var buttonUrl = '{{ path('app_main')}}';
                var newNode = appNode.replace('PLACEHOLDER', buttonUrl);
                $('#myMainPanel').html(newNode);
                var data = {'oppId': oppId};
                $.ajax({
                    url: "{{ path('app_ajaxplayuser')}}",
                    type: 'POST',
                    cache: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        connectUser();
                    }
                });
            });

            //reject user with not now button. send oppId with ajax and set opp status to 4(reject)
            $(document).on('click', "#notNow", function (e) {
                e.preventDefault();
                var oppId = $(this).attr('action-data');
                console.log(oppId);
                var data = {'oppId': oppId};
                $.ajax({
                    url: "{{ path('app_ajaxrejectplay')}}",
                    type: 'POST',
                    cache: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        if (response) {
                            window.location.href = "{{ path('app_main')}}";
                        }
                    }
                });
            });

            //accept new game from modal window
            $(document).on('click', "#playUser", function (e) {
                e.preventDefault();
                var modal = document.getElementById('myModal');
                modal.style.display = "none";
                var oppId = $(this).attr('action-data');
                console.log('button pressed');
                console.log(oppId);

                var myUrl = "{{path('app_ajaxconnectuser')}}";
                var data = {'oppId': oppId};
                $.ajax({
                    type: 'POST',
                    url: myUrl,
                    cache: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        if (response == 'opponent exist') {
                            window.location.href = "{{ path('app_game')}}";
                        }
                    },
                    complete: function () {
                        //console.log('Request is complete');
                    },
                    error: function () {
                        console.log('Oops...there was an error!');
                    }
                });
            });

            //check modal message
            $(function () {
                setInterval(function () {
                    $.ajax({
                        url: "{{ path('app_ajaxmodalcheck')}}",
                        dataType: "json",
                        success: function (response) {
                            if (response.oppId != 'no') {
                                console.log('modal exist');
                                var modal = document.getElementById('myModal');
                                var contentDiv = document.getElementById('modalContent');
                                $('#playUser').attr('action-data', response.oppId);
                                $('#notNow').attr('action-data', response.oppId);
                                contentDiv.innerHTML = response.oppName + ' wants to play with you!';
                                modal.style.display = "block";
                                console.log(response);
                            }
                            console.log(response);
                        }
                    });
                }, 3000);
            });

            //check if the user accepted my play request. If the message 'rejected' redirect to main page
            function connectUser() {
                setInterval(function () {
                    $.ajax({
                        url: "{{ path('app_ajaxcheckmystatus')}}",
                        dataType: "json",
                        success: function (response) {
                            if (response !== 'no result') {
                                if (response == 'opponent exist') {
                                    window.location.href = "{{ path('app_game')}}";
                                }
                                if (response == 'rejected') {
                                    window.location.href = "{{ path('app_main')}}";
                                }
                            } else {
                                console.log('interval on');
                            }
                        }
                    });
                }, 3000);
            }
        });
        
        //animation FROM HERE
        
        function calculateX(col) {
            var colWidth = globalColWidht;
            var mainX = colWidth / 7;
            var correctX = mainX / 2;
            var colX = mainX * col - correctX;
            return colX;
        }

        function calculateY(col) {
            var mainY = $("#canvas").height() / 6;
            var correctY = mainY / 2;
            var row = COLUMN.getCol('col' + col) + 1;
            var colY = $("#canvas").height() - row * mainY + correctY;
            return colY;
        }
        
        //display controller
        function triggerDisplay(col, color) {
            animate(col, color);
            //displayCols();
        }




        function drawCircle(x, y, color, col) {
            var mainCanvas = document.querySelector("#canvas");
            var mainContext = mainCanvas.getContext("2d");
            if (color === 'blue') {
                var myColor = "#006699";
            } else {
                var myColor = "#d9534f";
            }

            // draw the circle
            mainContext.beginPath();
            var radius = 20;
            mainContext.arc(x, y, radius, 0, Math.PI * 2, false);
            mainContext.closePath();
            // color in the circle
            mainContext.fillStyle = myColor;
            mainContext.fill();
            COLUMN.addCol('col' + col);
        }
        
        //animation
        function animate(col, color) {
            var mainCanvas = document.querySelector("#canvas");
            var mainContext = mainCanvas.getContext("2d");
            if (color === 'blue') {
                var myColor = "#006699";
            } else {
                var myColor = "#d9534f";
            }
            var Ypos = 0;
            var speed = 2;
            var acceleration = 1;
            var Ymax = calculateY(col);
            var Xpos = calculateX(col);

            //calculate radius
            var colWidth = $("#referenceCol").width();
            if (colWidth < 350) {
                var radius = 16;
            } else {
                var radius = 20;
            }

            function draw() {
                requestID = requestAnimationFrame(draw);

                // Drawing code goes here
                mainContext.clearRect(Xpos - 22, Ypos - 50 + speed * acceleration, 45, 60);
                mainContext.beginPath();
                mainContext.arc(Xpos, Ypos + speed, radius, 0, Math.PI * 2, false);
                mainContext.closePath();
                // color in the circle
                mainContext.fillStyle = myColor;
                mainContext.fill();
                if (Ypos >= Ymax) {
                    mainContext.clearRect(Xpos - 22, Ypos - 50 + speed * acceleration, 45, 70);
                    cancelAnimationFrame(requestID);
                    drawCircle(calculateX(col), calculateY(col), color, col);
                }
                Ypos += speed * acceleration;
                acceleration += 0.15;
            }
            draw();
        }
        
        
        
        
        
        
        
        
        
    </script>


{% endblock %}
